<persistence xmlns="http://java.sun.com/xml/ns/persistence"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xsi:schemaLocation="http://java.sun.com/xml/ns/persistence
    http://java.sun.com/xml/ns/persistence/persistence_1_0.xsd"
   version="1.0">

   <persistence-unit name="Connection">
   	   <provider>org.hibernate.ejb.HibernatePersistence</provider>
       <properties>
          <!-- Scan and detect annotated entities -->
          <property name="hibernate.archive.autodetection" value="class"/>
          
		  <!--DB Connexion values -->
          <property name="hibernate.connection.driver_class" value="org.postgresql.Driver"/>
          <!-- CONNECTION info (user, password, url) are injected by spring -->

          <property name="hibernate.showsql" value="true" />
          <property name="hibernate.dialect" value="org.hibernate.dialect.PostgreSQLDialect" />
          
          <property name="hibernate.connection.characterEncoding" value="utf8" />
          <property name="hibernate.connection.charSet" value="utf8" />
          
          <!-- Because with postgres/Spring, Large objects cannot be used with Autocommit (?) -->
          <property name="hibernate.connection.autocommit" value="false"/>
           <!-- Create the database schema when this test.persistence unit is deployed, drop
                it (clean the database) when it is undeployed
           -->
           <property name="hibernate.hbm2ddl.auto" value="validate"/>
           
<!--            <property name="hibernate.cache.provider_class"    value="org.hibernate.cache.ehcache.SingletonEhCacheProvider" />
 -->  
            <property name="hibernate.cache.region.factory_class" value="org.hibernate.cache.ehcache.EhCacheRegionFactory"/> 
<!--           <property name="hibernate.cache.provider_class"    value="org.hibernate.cache.EhCacheProvider"/> -->
           <property name="org.hibernate.cache.ehcache.configurationResourceName"    value="/ehcache.xml" />
           <property name="hibernate.cache.use_query_cache" value="true" />
           <property name="hibernate.cache.use_second_level_cache"  value="true" />
           <property name="hibernate.generate_statistics" value="true" />
           
           <!-- <property name="hibernate.cache.use_structured_entries" value="true"/>
           <property name="hibernate.cache.use_second_level_cache" value="true"/>
           <property name="hibernate.cache.use_query_cache" value="true"/>           
           <property name="hibernate.cache.region.factory_class" value="org.hibernate.cache.ehcache.SingletonEhCacheRegionFactory"/>       -->        
           
      </properties>
   </persistence-unit>
</persistence>
